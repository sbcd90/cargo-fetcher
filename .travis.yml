# _chanting_ rust, Rust, RUst, RUSt, RUST
language: rust

stages:
- test
# Deploy stage on runs on a valid semver tag, regardless of branch
- name: deploy
  if: tag =~ /^\d+\.\d+\.\d+.*$/

env:
  global:
  # We always want full stack traces in the event of a panic
  - RUST_BACKTRACE=1

# See http://www.garbers.co.za/2017/11/01/code-folding-and-timing-in-travis-ci/
# this just allows us to give _somewhat_ better views of the build steps
before_script:
- export -f travis_nanoseconds
- export -f travis_fold
- export -f travis_time_start
- export -f travis_time_finish

matrix:
  fast_finish: true

  include:
  #  _      _       _   
  # | |    (_)     | |  
  # | |     _ _ __ | |_ 
  # | |    | | '_ \| __|
  # | |____| | | | | |_ 
  # |______|_|_| |_|\__|

  # 1. Ensure rustfmt does not produce diffs. We always use
  # the default rustfmt settings.
  # 2. Ensure there are no clippy warnings.
  - name: "stable lint"
    # We could use a lint stage here, but prefer to go wide
    #
    stage: test
    rust: stable
    os: linux
    script: .ci/lint.sh

  # We do the exact same checks on the beta channel, as both
  # rustfmt and clippy can change their behavior between releases
  # and introduce new diffs/lints compared to stable
  - name: "beta lint"
    stage: test
    rust: beta
    os: linux
    script: .ci/lint.sh
    if: branch = master AND tag IS blank

  #  _______        _   
  # |__   __|      | |  
  #    | | ___  ___| |_ 
  #    | |/ _ \/ __| __|
  #    | |  __/\__ \ |_ 
  #    |_|\___||___/\__|

  # Tests all platforms on stable
  # and additionally running beta and nightly
  # tests on Linux as Linux runs are generally
  # faster in every aspect on Travis

  - name: "stable test linux"
    stage: test
    rust: stable
    os: linux
    script: .ci/test.sh

  - name: "beta test linux"
    stage: test
    rust: beta
    os: linux
    script: .ci/test.sh
    if: branch = master AND tag IS blank

  - name: "nightly test linux"
    stage: test
    rust: nightly
    script: .ci/test.sh
    if: branch = master AND tag IS blank

  - name: "stable test osx"
    rust: stable
    os: osx
    script: .ci/test.sh

  - name: "stable test windows"
    rust: stable
    os: windows
    script: .ci/test.sh

  # Add more testing stages if you have them!

  #  _____       _     _ _     _     
  # |  __ \     | |   | (_)   | |    
  # | |__) |   _| |__ | |_ ___| |__  
  # |  ___/ | | | '_ \| | / __| '_ \ 
  # | |   | |_| | |_) | | \__ \ | | |
  # |_|    \__,_|_.__/|_|_|___/_| |_|

  # Publish a release to crates.io. The only
  # thing you need to do is to is change the repo
  # below, and provide the output of the `travis encrypt <crates_io_token>`
  # in the deploy.token.secure value. Note that you will
  # need to encrypt the same key for different repos, you
  # can't just copy the value from another repo.
  - stage: deploy
    rust: stable
    os: linux
    script: echo "deploying $TRAVIS_TAG to crates.io"
    deploy:
      provider: cargo
      token:
        secure: Q6VHNqt7fS1P98btlg4wWjgc1oq/dPMaa5gSYStrH/ByE7tvCMWKHGow6txvGG0thcwk4sNLcRswE30rcI3tPrDKlQWuGctkFUc/c6t95M6NueBvL440ori3jIyH6OpakL1TlYEbtXYACdM749ChPYfB9DolnRRtX63wg/5NJzdcavFK0XOMN1HdjwA1wdJ3mSRWr6Jy/lVHvcSVPE/bdHb6/WnwgZbfRXMffeGBelSJm0dV/w76D/o1zg8hWIh98xbh5WnXActZuVMlbyGvlEppXsRs2+fbXQ9kkJxmVHBXvKgvQsxmDUbUgGKoCzcEtmWk2ao5PTXxj20wp6VoVHVl7ehZ6WKyGKEcoeda6DhtYHzxhP1Es2B+DBA6e0nqng+vkDXnoxaeWKJd0BzZjQEcwKltR+uV8yIz5lZMK1dHkJXZcKivI8LVbVFmLfLbYmpJyMRgPEibwUGSjSMbs1jMmXSifBvd5aklZeRTchWo7zK0bUbyDZHLYGYCKW7dilvj9qaDtZxSakA7nSQ2WgzCIHDXT/k6fDvlkXllj3OKDHOwqZB1c3INEcVWPNhroCghdqU5LTQqtutVikQCzswVdpogUZw+R8GxTd/HgfYfb67hHmfdUtjlpG6kLew3//ofOrVjv1yzdvjFbSetUIci+XOLGE65bvzmUMZWCyw=
      on:
        repo: EmbarkStudios/cargo-fetcher
        tags: true

  # Keep these step if you want to publish tarballed releases to Github.
  # Generally, this will only make sense for binary crates, so normally
  # you will want to remove them. If you do, you can also remove the
  # .ci/prep_deploy and .ci/checksum.ps1

  - name: "publish x86_64-unknown-linux-musl"
    stage: deploy
    rust: stable
    os: linux
    env:
    - DEPLOY=1
    - TARGET=x86_64-unknown-linux-musl
    script:
    - .ci/install_musl.sh
    - .ci/prep_deploy.sh

  - name: "publish x86_64-pc-windows-msvc"
    stage: deploy
    os: windows
    env:
    - DEPLOY=1
    - TARGET=x86_64-pc-windows-msvc
    # Override Travis' rust version, we don't want the gnu default
    # caused Travis running in bash, the normal Travis Rust install
    # process will pick up this environment variable
    - TRAVIS_RUST_VERSION=stable-x86_64-pc-windows-msvc
    script:
    - .ci/prep_deploy.sh

  - name: "publish x86_64-apple-darwin"
    stage: deploy
    rust: stable
    os: osx
    env:
    - DEPLOY=1
    - TARGET=x86_64-apple-darwin
    script:
    - .ci/prep_deploy.sh

# Just as with the crates.io publish step, you will need
# to encrypt your API key with `travis encrypt <github_token>` and
# place it in the deploy.api_key.secure value
deploy:
- provider: releases
  api_key:
    secure: dYVvn9r8pSwgSgcEsHE5OmvXFsGnBTtMlsfmp+hda401n3aD/ZDdFgd238KSR9S/fGak6RB5iKXGFdz0s5i8c5NaM2WlpdgiGEGi7AqrbEYS16p98p0xTk/Z58Z4LaQTgGix9O0Ck1Zvzal3G4L7MgdVO0Jy1Px8n3pSrdkWnHJs7K6MRvNEM/JfcBzumMyyKCC35RuTwg4WjMsfvpCjLxmi31ocl0DhiYplp+TjTwDO4ARF/OWesDmO2uXchOz26EQ2p4JNklg9Y2Pf7PgQN34f7IS7Yvhev6A2jz6q2c0gL03J/0iacC38PcYx80GvQaaUfGrMravTt7AygcHfLPyuDmupY4pX7jb7v8pER7Mn6Ct8QD6eQIEjMaYUYMHCeJgVkOvhZfBPuqatfPJhoWqUdXrWjOTylCy9XKES1O4dGK3Mkjgfovf87w70vbQxbQGL5WWl9BNDjQ8JbhncCa9uTAnoHZlnC3qCEwOKIyxdLviJdZjr/dpH8KaT8CXbotheA1iOKTF6GNm6i/cR1rd35Rqb5XzIWYid+6hWacUQAoNlK9nqQ2AO51IcIkGo2E5EMo/vU/nzJIw23HCyHzFNX3k4iBrd39XiRVUy3lzF9MUXSXygQ3HyIxkQ8JmD2osFPG+pn9P5YFQFVYNkSaIiFQmJXusX4ViW22h9FRw=
  file:
  - cargo-fetcher-$TRAVIS_TAG-$TARGET.tar.gz
  - cargo-fetcher-$TRAVIS_TAG-$TARGET.tar.gz.sha256
  skip_cleanup: true
  on:
    condition: $DEPLOY = 1
    repo: EmbarkStudios/cargo-fetcher
    tags: true
